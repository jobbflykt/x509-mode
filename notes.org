* viewp7
#+begin_src sh
openssl crl2pkcs7 -help 2>&1
#+end_src

#+RESULTS:
#+begin_example
Usage: crl2pkcs7 [options]
Valid options are:
 -help             Display this summary
 -inform PEM|DER   Input format - DER or PEM
 -outform PEM|DER  Output format - DER or PEM
 -in infile        Input file
 -out outfile      Output file
 -nocrl            No crl to load, just certs from '-certfile'
 -certfile infile  File of chain of certs to a trusted CA; can be repeated
#+end_example

#+begin_src sh
mkdir -p testfiles/CA/pki/pkcs7
openssl crl2pkcs7 -inform PEM \
        -in testfiles/CA/pki/crl/ca_testtool_ca_01_crl.pem \
        -certfile testfiles/CA/pki/crt/jobbflykt.crt \
        -certfile testfiles/CA/pki/ca/ca_testtool_ca_01.crt \
        -out testfiles/CA/pki/pkcs7/jobbflykt.p7b
#+end_src

#+RESULTS:

#+begin_src sh
openssl pkcs7 --help 2>&1
openssl pkcs7 -in testfiles/CA/pki/pkcs7/jobbflykt.p7b -noout -text -print_certs
#+end_src

#+RESULTS:
#+begin_example
Usage: pkcs7 [options]
Valid options are:
 -help             Display this summary
 -inform PEM|DER   Input format - DER or PEM
 -in infile        Input file
 -outform PEM|DER  Output format - DER or PEM
 -out outfile      Output file
 -noout            Don't output encoded data
 -text             Print full details of certificates
 -print            Print out all fields of the PKCS7 structure
 -print_certs      Print_certs  print any certs or crl in the input
 -engine val       Use engine, possibly a hardware device
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 2 (0x2)
        Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN=CA TestTool CA 01, O=CA TestTool Authority
        Validity
            Not Before: Jun 11 06:09:06 2022 GMT
            Not After : May 29 06:09:06 2072 GMT
        Subject: CN=jobbflykt, O=CA TestTool Authority/emailAddress=jobbflykt@catesttool.se/x500UniqueIdentifier=myX500id/serialNumber=811218-9876
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                RSA Public-Key: (2048 bit)
                Modulus:
                    00:ba:ee:77:29:dc:d6:4b:fc:a9:97:58:7a:b4:27:
                    74:17:2e:58:4d:28:89:77:f1:ff:e2:b9:1d:cd:3a:
                    ab:13:6f:47:a8:7a:27:a0:3e:39:8f:d7:b9:b1:06:
                    a1:b3:4e:cc:df:c7:39:0b:1b:8d:8e:52:d7:ff:0c:
                    7b:b1:66:9c:05:d7:7f:61:cb:9f:0c:2c:3d:ee:01:
                    f5:ee:fd:57:4f:60:32:2c:c1:8b:d8:81:5f:5f:5c:
                    35:1c:f4:48:25:da:c6:0a:2b:8a:3a:2c:1d:c5:dc:
                    4a:f1:71:1a:62:a6:cb:eb:91:95:5f:93:1a:4a:f3:
                    70:8f:61:fe:82:50:ef:ae:25:ae:f6:1a:74:d9:14:
                    05:cc:70:d4:66:8a:27:d2:dc:94:d8:e9:d4:f7:78:
                    fc:69:7f:f9:28:70:fd:c3:36:cf:66:c0:45:80:d4:
                    69:bd:3d:30:5c:e8:c8:f1:5e:f0:29:ff:05:04:08:
                    42:4b:bd:15:86:71:a8:c1:0a:16:23:b1:5d:c0:2a:
                    ed:f5:42:cf:6d:b6:ca:09:2a:85:c3:08:42:54:46:
                    b1:a6:f7:c4:d6:cc:56:4d:d6:63:22:7f:b7:bb:9a:
                    61:10:fa:0e:c6:e9:43:d6:64:fc:e2:51:f6:29:88:
                    39:19:fc:57:2f:7d:69:d3:b6:22:f2:dc:e0:54:0a:
                    99:e3
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Subject Key Identifier:
                58:36:45:87:08:95:C8:23:F0:B2:FF:A8:2A:CC:C8:E5:27:CC:6B:FC
            X509v3 Authority Key Identifier:
                DirName:/CN=CA TestTool CA 01/O=CA TestTool Authority
                serial:01

            X509v3 Basic Constraints:
                CA:FALSE
            X509v3 Key Usage: critical
                Digital Signature, Key Encipherment, Data Encipherment
            X509v3 CRL Distribution Points:

                Full Name:
                  URI:http://crl.catesttool.se

            X509v3 Extended Key Usage:
                TLS Web Client Authentication, E-mail Protection
            X509v3 Subject Alternative Name:
                email:jobbflykt@catesttool.se, othername:<unsupported>
    Signature Algorithm: sha256WithRSAEncryption
         99:ee:e4:1f:7d:13:52:71:4f:10:de:7e:39:84:69:32:ad:60:
         3c:43:2d:11:11:77:d4:eb:2d:d9:40:ea:01:48:62:aa:25:c2:
         71:6e:9f:3b:ea:45:0b:4e:7c:bc:9f:f9:b7:50:f3:c6:f8:3f:
         c5:ef:f7:c6:d8:76:62:7a:57:79:c5:16:f5:69:28:0d:cf:0b:
         e7:c9:ac:80:cf:c3:52:f4:9e:02:4f:77:77:5d:a1:9c:fe:35:
         11:8f:fd:da:0f:de:d6:b2:8e:44:e3:5a:fc:6a:e0:09:30:0b:
         56:0f:97:46:31:f6:e8:7c:b8:cf:ed:dd:d8:48:93:6f:7f:d2:
         df:87:6e:73:4d:09:d0:94:fd:23:6c:23:40:7d:00:4d:de:4a:
         dc:c6:53:c2:cd:22:06:11:fd:89:bb:68:36:52:ab:a4:43:67:
         30:63:88:70:87:3d:63:d0:db:76:16:e6:1f:55:9f:bd:c0:cb:
         2b:c4:53:2f:ad:36:12:c3:41:ba:05:c5:c2:b9:00:f2:5e:dd:
         3c:6c:92:31:80:42:50:85:56:63:ce:9a:4b:55:37:0d:e7:77:
         27:8b:dd:59:35:c2:48:e5:62:fb:3c:e7:d9:b3:02:67:83:d2:
         7e:29:61:a2:b8:15:4f:58:d9:b8:7e:ef:c8:a1:fe:60:93:58:
         0e:72:b6:11

Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 1 (0x1)
        Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN=CA TestTool CA 01, O=CA TestTool Authority
        Validity
            Not Before: Jun 11 06:06:02 2022 GMT
            Not After : May 29 06:06:02 2072 GMT
        Subject: CN=CA TestTool CA 01, O=CA TestTool Authority
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                RSA Public-Key: (2048 bit)
                Modulus:
                    00:d4:99:31:96:ca:10:8a:ca:dc:1d:ce:f1:3e:a9:
                    c5:cb:55:f8:54:fd:e9:19:2d:a2:8c:f3:42:80:59:
                    fb:50:cc:49:d0:10:66:7a:73:04:75:8f:45:9b:e3:
                    b6:06:ff:a5:98:7d:15:e2:39:5a:f4:75:b6:3b:9a:
                    11:3c:6c:f9:16:c2:ad:47:e1:48:87:44:6b:f1:46:
                    b7:4d:f8:03:54:43:90:94:58:cb:18:32:69:f9:70:
                    88:77:12:9b:55:62:41:f0:7a:30:95:59:a5:1a:81:
                    a8:dc:0f:af:cf:14:46:a6:e6:8d:f0:61:09:02:12:
                    a3:b8:64:9d:06:15:71:ba:c7:ef:c6:d6:1c:e2:04:
                    91:4d:59:9c:1f:71:6a:dd:6d:2e:d8:e0:94:f4:5d:
                    72:3e:62:4f:b3:f6:10:d1:6b:38:65:f5:84:10:34:
                    61:10:a4:a9:29:4d:90:93:cd:28:18:e5:ed:75:e1:
                    62:5c:3c:3d:a7:7a:a7:1c:69:f0:ae:a4:a6:5d:45:
                    82:9f:0b:91:1d:2b:f7:22:2d:a1:2f:97:80:d7:c9:
                    d9:f6:27:69:6f:71:7b:f9:69:e2:83:8c:b8:bc:a4:
                    94:7c:ee:bc:ea:9c:6b:cb:de:ab:4d:2f:58:a8:f9:
                    f9:e7:02:59:4f:91:03:cb:af:8c:0c:c8:df:1b:94:
                    17:39
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: critical
                CA:TRUE, pathlen:0
            X509v3 Key Usage: critical
                Certificate Sign, CRL Sign
            X509v3 CRL Distribution Points:

                Full Name:
                  URI:http://crl.catesttool.se

    Signature Algorithm: sha256WithRSAEncryption
         06:ff:5b:c6:5f:ee:6a:74:36:a7:2c:b1:9f:ab:ff:b0:52:a7:
         ca:38:28:58:4d:12:42:0d:23:63:2d:5d:ce:8f:1a:c0:96:e3:
         e0:22:7f:bf:9f:49:88:d2:30:4f:91:5e:55:db:52:20:a2:06:
         82:0a:ee:ad:b5:cd:74:4f:6f:29:ed:45:75:e7:7f:c3:50:af:
         2f:f5:35:30:7e:91:f4:c4:1d:8f:03:df:0e:e1:3c:d4:33:c2:
         2e:a6:49:a2:8a:2d:19:b5:11:c2:f6:85:62:5a:26:de:0c:eb:
         df:3f:8e:c4:20:ba:b4:d9:2d:52:94:00:f0:29:f3:ac:cf:69:
         86:aa:3d:be:c3:15:36:b7:f8:d1:c1:d1:c6:de:c5:f4:c3:b6:
         57:c2:43:05:e1:a1:9f:16:76:d9:66:40:b5:20:e6:1d:ed:bf:
         e6:f0:55:ec:49:c5:3d:44:51:2c:17:ef:cc:04:d9:81:86:a2:
         52:98:8a:93:44:a5:de:03:89:79:1f:f7:a7:a3:79:e9:a2:1e:
         6d:08:bf:7e:9a:07:c9:00:c4:67:2a:97:30:1c:e8:1f:61:4c:
         92:ca:91:e4:e3:61:7d:7f:7e:96:a8:cf:fc:3e:f2:f4:bc:e2:
         40:93:a6:fc:59:74:4d:82:53:aa:0f:96:a1:3d:c5:21:66:92:
         85:51:15:40

Certificate Revocation List (CRL):
        Version 2 (0x1)
        Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN = CA TestTool CA 01, O = CA TestTool Authority
        Last Update: Jun 11 06:09:56 2022 GMT
        Next Update: May 29 06:09:56 2072 GMT
Revoked Certificates:
    Serial Number: 02
        Revocation Date: Jun 11 06:09:39 2022 GMT
        CRL entry extensions:
            X509v3 CRL Reason Code:
                Unspecified
    Signature Algorithm: sha256WithRSAEncryption
         07:82:cd:6f:10:8d:bf:53:d1:8e:c6:53:28:30:f8:9d:bc:1c:
         7e:8b:2e:9a:e9:52:cc:5f:f5:8b:87:5e:da:ea:e8:87:2c:33:
         4a:71:b5:92:30:d2:74:5b:fd:7e:7a:bb:cb:e3:39:79:e3:94:
         33:c4:0c:42:30:68:d9:e1:23:e5:51:bb:31:36:09:aa:b8:5e:
         de:e5:8a:50:ad:be:26:4f:c8:95:ed:71:e6:79:48:e8:74:a6:
         46:58:ad:c7:12:5a:59:f6:f8:9b:81:0e:1f:9f:dc:ed:9d:3a:
         3c:65:e7:26:65:5d:87:23:62:29:da:6c:75:e8:45:d8:4c:1b:
         9a:53:0b:45:f4:4c:c0:a7:97:e4:35:12:ca:c5:0c:d3:70:98:
         36:97:b3:34:79:31:4e:c8:fd:7d:e6:80:2d:ee:96:9f:1e:8f:
         f6:d1:17:ed:d8:df:a2:39:10:b0:63:4d:38:fb:03:c2:9d:fd:
         6b:da:7c:9c:e8:7b:a7:c7:51:ba:39:bb:2b:58:e3:3b:57:ce:
         69:22:65:72:1d:70:e2:ac:0a:fb:1d:54:16:b8:28:e8:11:38:
         a8:69:14:e2:07:86:55:cd:57:de:cf:97:ef:90:b2:52:f4:82:
         1a:3d:45:cd:3e:35:b2:8d:95:7c:b3:d4:4c:9a:0d:73:11:e5:
         c5:dc:fc:09

#+end_example
* viewpkcs12
pkcs12 -info -nodes -passin pass:
* DONE Highlight near expires
Customizable time before expire highlight. Some "almost" warning face.
* DONE Heuristic for dwim on DER data
Certs, CRLs and other entities should be recognized as such by examining the
ASN.1 structure.
* DONE Handle public keys better
Detect if public RSA key and use -pubin or whatever to decode as such.
* DONE Add URL highlighting to unknown OIDs
Query www.oid-info.com
Example:
https://oid-rep.orange-labs.fr/get/0.0.5.115.1.0
* DONE asn1-mode offset
Add keys, e.g. d/u (down/up), for drilling down into ASN.1 structures at an
offset determined by the current line.

Example
  646:d=5  hl=2 l=   3 prim: OBJECT            :X509v3 Extended Key Usage
> 651:d=5  hl=2 l=  56 prim: OCTET STRING      [HEX DUMP]:3036060A2B060104018237140202060A6086480165030201032F06082B0601050507030206082B0601050507030306082B06010505070304

If cursor i on line denoted by >, pressing d will add an "-offset 653" argument
to the asn1parse command. The OCTET STRING is itself an ANS.1 struct starting at
offset 651 + 2.

Doing that gives a view of the Extended Key Usage structure.

  ...
  58:d=1  hl=2 l=   3 prim: OBJECT            :X509v3 CRL Distribution Points
> 63:d=1  hl=2 l=  34 prim: OCTET STRING      [HEX DUMP]:3020301EA01CA01A8618687474703A2F2F63726C2E636174657374746F6F6C2E7365

Placing the cursor on another line and again pressing d should add that offset
to the current one and redisplay again. In the example -offset 718, = 653 +
63 + 2.

x509-asn1-mode must store a list of offset that can be pushed and popped when
going down and up. The stack also records point before going down, restoring it
when backing up.

x509--ans1parse-offset-stack = (653 718)
* DONE Add support for OpenSSL 3
For example "Signature Value" is shown after
     Signature Algorithm: sha256WithRSAEncryption
new> Signature Value:
          12:74:61...
* DONE Use `eval-when-compile' when defining constants with `defconst'.
* TODO Use defmacro for creating view-functions.
* DONE Add support for -strparse N argument in x509-asn1-mode.
Similar to -offset but different starting offset. Need to figure out if
recursive -strparse makes sense and how it interacts with
x509--asn1-offset-down and x509--asn1-offset-up.

nested_bitstrings.bin
SEQUENCE             30 0C
  BITSTRING          03 0A 00
    BITSTRING        03 07 00
      BITSTRING      03 04 00
        INTEGER FA   02 01 FA

when strparse at offset 2, we need to record the header length and add 1 for
the initial unused-bits byte. If we then go furter down, the new start is the current start + it's header length + 1.

When x509--strparse-down:
  record (offset delta) where strstart is hl + 1

on a line:
   x509--get-strparse-offset(strstart)
     ;; where strstart is current strstart + delta
     -> ( (+ strstart line-offset) (+ hl 1) )


<2022-12-12 Mon 10:55>

command         : 'strparse or 'offset
start           : integer argument to command
hl              : header lenght. 0 for offset, hl at start for strparse.
point           : (point) in buffer when command is issued.


current offset  : (let ((top (car stack)))
                     (if top
                         (+ (nth 1 top) (nth 2 top))
                       0))

                  i.e. start + hl

"down"          : push (list 'offset
                             (+ (current-offset) (offset-on-line) (hl-on-line))
                             0
                             (point))

"strparse"      : push (list 'strparse
                             (+ (current-offset) (offset-on-line))
                             (hl-on-line)
                             (point))

"up"            : (let ((current (pop stack))
                        (point (nth 4 current))
                        (last (car stack)))
                     (when last
                       (update-command (nth 0 top) (nth 1 top)))
                       (execute)
                       (goto-char point)))


lo : Line offset
hl : header len
bs : bitsting extra byte
co : current offset

1) strparse : co=0 lo=2 = 2  push (co:2 hl:2 bs:1)
2) strparse : co=2 chl=2 cbs=1 lo=0 = 5 push(co:5 hl:2 bs:1)
3) strparse : co=5 chl=2 cbs=1 lo=0 = 8 push(co:8 hl:2 bs:1)


1) offset : co=0 hl=2 bs=1 lo=2 = 5 push(co:5 hl:2 bs=1)
2) offset : co=5 hl=2 bs=1 = 8 push(co:8 hl:2 bs=1)
3) offset : co8 hl=2 bs=1 = 11 push(co:11 hl:2 bs=1)


up -> top = (co:8 hl:2 bs=1)
* DONE Dynamic `mode-name' for x509-asn1-mode
Reflect current -strparse N or -offset Nvalue.
asn1[sN]
asn1[oN]

See `c-update-modeline' in lisp/progmodes/cc-cmds.el.gz
It sets `mode-name' and calls `force-mode-line-update'.

Create new function `x509--asn1-mode-line', called from
`x509--asn1-offset-strparse' and `x509--asn1-offset-up'.
* TODO Add package-lint to CI
Run package-lint-batch-and-exit as part if CI.
See for example https://github.com/purcell/ibuffer-vc/blob/master/Makefile
* TODO Add checkdoc lint to CI
* DONE hexl-mode buffer following x509-asn1-mode line.
Remains:
- [X] Test with emacs -Q
- [X] Test killing hexl buffer and then move around and toggle.
  Post command hook needs to detect that buffer is killed.
- [X] Can hexl buffer be made visible automatically if it's not when overlay is
  updated? Yes. Look at `next-error-no-select'
- [X] What happens when several hexl buffers are active? Should overlay list be
  local? To what buffer? Can we make it local to the hexl buffer and let update
  overlay get it from that buffer. Think there is function for getting buffer
  local values from another buffer.
- [X] Prevent overlay to extend window width if possible.
- [X] Update README.md
- [X] Mention rmsbolt inspiration.
- [X] Test inf, i.e infinite length structures.  What should happen? Treat
  length as being zero since we can't (easily) know.
- [X] Add unit tests.
- [X] Separate faces for header and value.
